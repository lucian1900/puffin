$load 'rosella/test.pbc';
$load 'int.pbc';

function intcls() {
    var o = new Python.type('object', null);
    var t = new Python.type('type', null, o);

    t.__class__ = t;
    o.__class__ = t;

    return new Python.int(t, o);
}

class int {
    function boot() {
        self.assert.throws_nothing(function(){
            intcls();
        });
    }

    function create() {
        self.assert.throws_nothing(function(){
            intcls().new();
        });
    }

    function init() {
        var a = intcls().new();
        self.assert.throws_nothing(function(){
            a.get('__init__')(a, 10);
        });
    }

    function repr() {
        var a = intcls().new();
        a.content = 1;
        self.assert.equal(a.get('__repr__')(a), '1');
    }

    function add() {
        var a = intcls().new(); a.content = 20;
        var b = intcls().new(); b.content = 22;

        self.assert.equal(a.get('__add__')(a, b).content, 42);
    }
}

function main() {
    using Rosella.Test.test;
    test(class int);
}
