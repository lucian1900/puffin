$load 'instance.pbc';
$load 'type.pbc';

namespace Python {

function object(type) {
    var t = new Python.instance;

    t.__class__ = type;
    t.__bases__ = [];

    t.__name__ = 'object';
    t.__module__ = 'builtins';

    type.__bases__.push(t);

    t.__new__ = function(cls) {
        var o = new Python.instance;
        o.__class__ = cls;

        return o;
    };

    t.__init__ = function(obj) {};

    t.__call__ = function(cls) {
        var f = cls.__new__;
        var n = f(cls);
        f = n.__init__;
        f(n);
        return n;
    };

    t.__repr__ = function(obj) {
        var sb = new 'StringBuilder';
        var hash = obj.__hash__; 

        if(obj.__module__ == 'builtins')
            sb.append_format("<%0 object at %1>",
                             obj.__class__.__name__, hash(obj));
        else
            sb.append_format("<%0.%1 object at %2>",
                             obj.__class__.__module__, obj.__class__.__name__, hash(obj));
        return string(sb);
    };

    return t;
}

}
