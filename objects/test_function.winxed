$load 'rosella/test.pbc';
$load 'function.pbc';

function funccls() {
    var o = new Python.type('object', null);
    var t = new Python.type('type', null, o);

    t.__class__ = t;
    o.__class__ = t;

    return new Python.function(t, o);
}

class function {
    function boot() {
        self.assert.throws_nothing(function(){
            //>>> function
            funccls(); 
        });
    }

    function create() {
        self.assert.throws_nothing(function(){
            //>>> def f(): pass
            funccls().new(function(s){});
        });
    }

    function call() {
        var f = funccls().new(function(s){});

        self.assert.throws_nothing(function(){
            //>>> f()
            f.get('__call__')(f, {});
        });
    }

    function return() {
        var f = funccls().new(function(s){return 42;});

        //>>> def f(): return 42; f() == 42
        self.assert.equal(f.get('__call__')(f, {}), 42);
    }

    function method_get() {
        self.status.unimplemented('not yet decided on syntax');

        var f = funccls().new(function(s){return 42;});

        self.assert.equal();
    }
}

function main() {
    using Rosella.Test.test;
    test(class function);
}
