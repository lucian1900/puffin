$load 'rosella/test.pbc';
$load 'tuple.pbc';

function intcls() {
    var o = new Python.type('object', null);
    var t = new Python.type('type', null, o);

    t.__class__ = t;
    o.__class__ = t;

    return new Python.tuple(t, o);
}

class Testtuple {
    function boot() {
        self.assert.throws_nothing(function(){
            intcls();
        });
    }

    function create() {
        self.assert.throws_nothing(function(){
            intcls().new();
        });
    }

    function init() {
        var a = intcls().new();
        self.assert.throws_nothing(function(){
            a.get('__init__')(a, [1, 2, 3]);
        });
    }

    function getitem() {
        var a = intcls().new(); a.content = [1, 2, 3];

        self.assert.equal(a.get('__getitem__')(a, 1), 2);
    }

    function len() {
        var a = intcls().new(); a.content = [1, 2, 3];

        self.assert.equal(a.get('__len__')(a), 3);
    }
}

function main() {
    using Rosella.Test.test;
    test(class Testtuple);
}
